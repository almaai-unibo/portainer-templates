{
  "version": "2",
  "templates": [
    {
      "type": 2,
      "title": "Development Container",
      "description": "Ubuntu latest with pre-configured openssh-server, git, docker-in-docker",
      "note": "Source code <a href=\"https://github.com/anitvam/dev-container\">here</a>",
      "categories": ["server", "ssh", "git", "docker"],
      "platform": "linux",
      "logo": "https://www.dmuth.org/wp-content/uploads/2019/03/docker-logo.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/dev-container/docker-compose.yml"
      },
      "env": [
        {
          "name": "PUBLIC_KEY",
          "label": "Public Key",
          "description": "The public key used to log-in into the server."
        },
        {
          "name": "VOLUME",
          "label": "Persistent volume name",
          "description": "Name of the persistent volume that will be attached to the container on the path /persistent"
        },
        {
          "name": "PORT",
          "label": "Port",
          "description": "The port the SSH service will listen upon"
        }
      ]
    },
    {
      "type": 1,
      "title": "Registry",
      "description": "Docker image registry",
      "categories": ["docker"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
      "image": "registry:latest",
      "ports": ["5000/tcp"],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ]
    },
    {
      "type": 1,
      "title": "Registry (cache)",
      "description": "Docker image registry configured as a DockerHub pull through cache",
      "categories": ["docker"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
      "image": "registry:latest",
      "ports": ["5000/tcp"],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ],
      "env": [
        {
          "name": "REGISTRY_PROXY_REMOTEURL",
          "default": "https://registry-1.docker.io",
          "preset": true
        }
      ]
    },
    {
      "type": 1,
      "title": "Ubuntu",
      "description": "Debian-based Linux operating system",
      "categories": ["operating-system"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ubuntu.png",
      "image": "ubuntu:latest",
      "interactive": true,
      "command": "/bin/bash"
    },
    {
      "type": 1,
      "title": "NodeJS",
      "description": "JavaScript-based platform for server-side and networking applications",
      "categories": ["development"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/node.png",
      "image": "node:latest",
      "interactive": true,
      "command": "/bin/bash"
    },
    {
      "type": 1,
      "title": "Nginx",
      "description": "High performance web server",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/nginx.png",
      "image": "nginx:latest",
      "ports": ["80/tcp", "443/tcp"],
      "volumes": [
        {
          "container": "/etc/nginx"
        },
        {
          "container": "/usr/share/nginx/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Httpd",
      "description": "Open-source HTTP server",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
      "image": "httpd:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/usr/local/apache2/htdocs/"
        }
      ]
    },
    {
      "type": 1,
      "title": "Caddy",
      "description": "Open-source web server with automatic HTTPS written in Go",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/caddy.png",
      "image": "caddy:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "MySQL",
      "description": "The most popular open-source database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
      "image": "mysql/mysql-server:5.7",
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root password"
        },
        {
          "name": "MYSQL_ROOT_HOST",
          "default": "%",
          "preset": true
        }
      ],
      "ports": ["3306/tcp"],
      "volumes": [
        {
          "container": "/var/lib/mysql"
        }
      ]
    },
    {
      "type": 1,
      "title": "MariaDB",
      "description": "Performance beyond MySQL",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mariadb.png",
      "image": "mariadb:latest",
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root password"
        }
      ],
      "ports": ["3306/tcp"],
      "volumes": [
        {
          "container": "/var/lib/mysql"
        }
      ]
    },
    {
      "type": 1,
      "title": "PostgreSQL",
      "description": "The most advanced open-source database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
      "image": "postgres:latest",
      "env": [
        {
          "name": "POSTGRES_USER",
          "label": "Superuser"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Superuser password"
        }
      ],
      "ports": ["5432/tcp"],
      "volumes": [
        {
          "container": "/var/lib/postgresql/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Mongo",
      "description": "Open-source document-oriented database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
      "image": "mongo:latest",
      "ports": ["27017/tcp"],
      "volumes": [
        {
          "container": "/data/db"
        }
      ]
    },
    {
      "type": 1,
      "title": "CrateDB",
      "description": "An open-source distributed SQL database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cratedb.png",
      "image": "crate:latest",
      "ports": ["4200/tcp", "4300/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Elasticsearch",
      "description": "Open-source search and analytics engine",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
      "image": "docker.elastic.co/elasticsearch/elasticsearch:7.15.1",
      "ports": ["9200/tcp", "9300/tcp"],
      "volumes": [
        {
          "container": "/usr/share/elasticsearch/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Gitlab CE",
      "description": "Open-source end-to-end software development platform",
      "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
      "categories": ["development", "project-management"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
      "image": "gitlab/gitlab-ce:latest",
      "ports": ["80/tcp", "443/tcp", "22/tcp"],
      "volumes": [
        {
          "container": "/etc/gitlab"
        },
        {
          "container": "/var/log/gitlab"
        },
        {
          "container": "/var/opt/gitlab"
        }
      ]
    },
    {
      "type": 1,
      "title": "Minio",
      "description": "A distributed object storage server built for cloud applications and devops",
      "categories": ["storage"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/minio.png",
      "image": "quay.io/minio/minio:latest",
      "ports": ["9000/tcp", "9001/tcp"],
      "env": [
        {
          "name": "MINIO_ROOT_USER",
          "label": "Root user"
        },
        {
          "name": "MINIO_ROOT_PASSWORD",
          "label": "Root password"
        }
      ],
      "volumes": [
        {
          "container": "/data"
        },
        {
          "container": "/root/.minio"
        }
      ],
      "command": "server /data --console-address ':9001'"
    },
    {
      "type": 1,
      "title": "Scality S3",
      "description": "Standalone AWS S3 protocol server",
      "categories": ["storage"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/scality-s3.png",
      "image": "scality/s3server",
      "ports": ["8000/tcp"],
      "env": [
        {
          "name": "SCALITY_ACCESS_KEY",
          "label": "Scality S3 access key"
        },
        {
          "name": "SCALITY_SECRET_KEY",
          "label": "Scality S3 secret key"
        }
      ],
      "volumes": [
        {
          "container": "/usr/src/app/localData"
        },
        {
          "container": "/usr/src/app/localMetadata"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server",
      "description": "Microsoft SQL Server on Linux",
      "categories": ["database"],
      "platform": "linux",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "mcr.microsoft.com/mssql/server:2019-latest",
      "ports": ["1433/tcp"],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "SA_PASSWORD",
          "label": "SA password"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server",
      "description": "Microsoft SQL Server Developer for Windows containers",
      "categories": ["database"],
      "platform": "windows",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "microsoft/mssql-server-windows-developer:latest",
      "ports": ["1433/tcp"],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "sa_password",
          "label": "SA password"
        }
      ],
      "volumes": [
        {
          "container": "C:/temp/"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server Express",
      "description": "Microsoft SQL Server Express for Windows containers",
      "categories": ["database"],
      "platform": "windows",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "microsoft/mssql-server-windows-express:latest",
      "ports": ["1433/tcp"],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "sa_password",
          "label": "SA password"
        }
      ],
      "volumes": [
        {
          "container": "C:/temp/"
        }
      ]
    },
    {
      "type": 1,
      "title": "Solr",
      "description": "Open-source enterprise search platform",
      "categories": ["search-engine"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/solr.png",
      "image": "solr:latest",
      "ports": ["8983/tcp"],
      "volumes": [
        {
          "container": "/opt/solr/mydata"
        }
      ]
    },
    {
      "type": 1,
      "title": "Redis",
      "description": "Open-source in-memory data structure store",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "image": "redis:latest",
      "ports": ["6379/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 2,
      "title": "Redis Cluster",
      "description": "Open-source in-memory data structure store - Cluster mode",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/redis-cluster/docker-stack.yaml"
      },
      "env": [
        {
          "name": "REDIS_PASSWD",
          "label": "Redis password"
        }
      ]
    },
    {
      "type": 1,
      "title": "RabbitMQ",
      "description": "Highly reliable enterprise messaging system",
      "categories": ["messaging"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/rabbitmq.png",
      "image": "rabbitmq:latest",
      "ports": ["5671/tcp", "5672/tcp"],
      "volumes": [
        {
          "container": "/var/lib/rabbitmq"
        }
      ]
    },
    {
      "type": 1,
      "title": "Ghost",
      "description": "Free and open-source blogging platform",
      "categories": ["blog"],
      "note": "Access the blog management interface under <code>/ghost/</code>.",
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ghost.png",
      "image": "ghost:latest",
      "ports": ["2368/tcp"],
      "volumes": [
        {
          "container": "/var/lib/ghost/content"
        }
      ]
    },
    {
      "type": 1,
      "title": "Joomla",
      "description": "Another free and open-source CMS",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/joomla.png",
      "image": "joomla:latest",
      "env": [
        {
          "name": "JOOMLA_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "JOOMLA_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Drupal",
      "description": "Open-source content management framework",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/drupal.png",
      "image": "drupal:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Plone",
      "description": "A free and open-source CMS built on top of Zope",
      "note": "Default user and password are admin/admin",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plone.png",
      "image": "plone:latest",
      "ports": ["8080/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Sematext Docker Agent",
      "description": "Collect logs, metrics and docker events",
      "categories": ["Log Management", "Monitoring"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
      "image": "sematext/sematext-agent-docker:latest",
      "name": "sematext-agent",
      "privileged": true,
      "env": [
        {
          "name": "LOGSENE_TOKEN",
          "label": "Logs token"
        },
        {
          "name": "SPM_TOKEN",
          "label": "SPM monitoring token"
        }
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ]
    },
    {
      "type": 1,
      "title": "Datadog agent",
      "description": "Collect events and metrics",
      "categories": ["Monitoring"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
      "image": "datadog/agent:latest",
      "env": [
        {
          "name": "DD_API_KEY",
          "label": "Datadog API key"
        }
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock",
          "readonly": true
        },
        {
          "container": "/host/sys/fs/cgroup",
          "bind": "/sys/fs/cgroup",
          "readonly": true
        },
        {
          "container": "/host/proc",
          "bind": "/proc",
          "readonly": true
        }
      ]
    },
    {
      "type": 1,
      "title": "Mautic",
      "description": "Open-source marketing automation platform",
      "categories": ["marketing"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mautic.png",
      "image": "mautic/mautic:latest",
      "env": [
        {
          "name": "MAUTIC_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "MAUTIC_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Jenkins",
      "description": "Open-source continuous integration tool",
      "categories": ["continuous-integration"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
      "image": "jenkins/jenkins:lts-jdk11",
      "ports": ["8080/tcp", "50000/tcp"],
      "volumes": [
        {
          "container": "/var/jenkins_home"
        }
      ]
    },
    {
      "type": 1,
      "title": "Redmine",
      "description": "Open-source project management tool",
      "note": "Default user and password are admin/admin",
      "categories": ["project-management"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redmine.png",
      "image": "redmine:latest",
      "ports": ["3000/tcp"],
      "volumes": [
        {
          "container": "/usr/src/redmine/files"
        }
      ]
    },
    {
      "type": 1,
      "title": "File browser",
      "description": "A web file manager",
      "note": "Default credentials: admin/admin",
      "categories": ["filesystem", "storage"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/filebrowser.png",
      "image": "filebrowser/filebrowser:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/data"
        },
        {
          "container": "/srv"
        }
      ],
      "command": "--port 80 --database /data/database.db --root /srv"
    },
    {
      "type": 1,
      "title": "CommandBox",
      "description": "ColdFusion (CFML) CLI",
      "categories": ["development"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-commandbox.png",
      "image": "ortussolutions/commandbox:latest",
      "env": [
        {
          "name": "CFENGINE",
          "default": "lucee@4.5",
          "preset": true
        }
      ],
      "ports": ["8080/tcp", "8443/tcp"]
    },
    {
      "type": 1,
      "title": "ContentBox",
      "description": "Open-source modular CMS",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-contentbox.png",
      "image": "ortussolutions/contentbox:latest",
      "env": [
        {
          "name": "express",
          "default": "true",
          "preset": true
        },
        {
          "name": "install",
          "default": "true",
          "preset": true
        },
        {
          "name": "CFENGINE",
          "default": "lucee@4.5",
          "preset": true
        }
      ],
      "ports": ["8080/tcp", "8443/tcp"],
      "volumes": [
        {
          "container": "/data/contentbox/db"
        },
        {
          "container": "/app/includes/shared/media"
        }
      ]
    },
    {
      "type": 1,
      "title": "Dokku",
      "description": "Dokku setup as a container",
      "categories": ["PaaS"],
      "platform": "linux",
      "logo": "",
      "image":"dokku/dokku",
      "ports": ["22/tcp", "80/tcp", "443/tcp"],
      "volumes": [{
        "container": "/mnt/dokku",
        "bind": "/var/lib/dokku"
      },
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      }],
      "env":[
        {
          "name": "DOKKU_HOSTNAME",
          "label": "Dokku hostname",
          "description": "Global hostname to be registered by Dokku"
        },
        {
          "name": "DOKKU_HOST_ROOT",
          "label": "Dokku host root",
          "default": "/var/lib/dokku/home/dokku",
          "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'"
        }
      ]
    },
    {
      "type": 1,
      "title": "OPC Router",
      "description": "No-code middleware for industrial applications. The OPC Router connects PLCs, PCS, SCADA, MES, SQL databases and servers, label printers, e-mail servers and erp-systems via OPC UA, MQTT, REST, CSV and many others without any programming effort",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/opc-router.png",
      "image": "opcrouter/runtime:latest",
      "ports": ["27017/tcp"],
      "env": [
        {
          "name": "OR_DATABASE_USERNAME",
          "label": "Database user"
        },
        {
          "name": "MONGO_INITDB_ROOT_USERNAME",
          "label": "Database password"
        },
        {
          "name": "OR_DATABASE_PASSWORD",
          "label": "Database root user"
        },
        {
          "name": "MONGO_INITDB_ROOT_PASSWORD",
          "label": "Database root password"
        },
        {
          "name": "OR_I_ACCEPT_EULA",
          "label": "Accept EULA",
          "select": [
            {
              "text": "Yes, I accept",
              "value": "true",
              "default": true
            }
          ]
        }
      ],
      "volumes": [
        {
          "container": "/data/db"
        },
        {
          "container": "/root/.dotnet/corefx/cryptography/x509stores/"
        }
      ]
    },
    {
      "type": 1,
      "title": "Floating License Server",
      "description": "License Server for Softing edgeConnector products",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/floating-license-server:latest",
      "ports": ["6200/tcp"],
      "interactive": true,
      "volumes": [
        {
          "container": "/licsrv/licenses"
        }
      ]
    },
    {
      "type": 1,
      "title": "EdgeConnector Modbus",
      "description": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeconnector-modbus:latest",
      "ports": ["443/tcp", "8099/tcp", "4897/tcp"]
    },
    {
      "type": 2,
      "title": "FileBrowser",
      "description": "A web-based GUI for browsing volumes",
      "note": "Deploys and instance of filebrowser/filebrowser",
      "categories": ["storage"],
      "platform": "linux",
      "logo": "https://www.gitbook.com/cdn-cgi/image/width=40,height=40,fit=contain,dpr=2,format=auto/https%3A%2F%2F3149836655-files.gitbook.io%2F~%2Ffiles%2Fv0%2Fb%2Fgitbook-legacy-files%2Fo%2Fspaces%252F-M8KDxOujDoPpJyJJ5_i%252Favatar-1590579241040.png%3Fgeneration%3D1590579241552005%26alt%3Dmedia",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/filebrowser/docker-compose.yml"
      },
      "env": [
        {
          "name": "USER",
          "label": "User's volume",
          "description": "The username of the user owing the persinstent storage"
        }
      ]
    },
    {
      "type": 2,
      "title": "XWiki",
      "description": "An XWiki instance based in MySQL 5.7",
      "note": "Deploys an XWiki service backed by a MySQL 5.7 DBMS",
      "categories": ["web", "cms"],
      "platform": "linux",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e2/Logo-xwikiorange.svg/162px-Logo-xwikiorange.svg.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/xwiki/docker-compose.yml"
      },
      "env": [
        {
          "name": "DB_VOLUME",
          "label": "DB volume name",
          "description": "The name of the (pre-existent) volume aimed at persisting the DB"
        },
        {
          "name": "XWIKI_VOLUME",
          "label": "XWiki volume name",
          "description": "The name of the (pre-existent) volume aimed at persisting the XWiki configuration and state files"
        }
      ]
    },
    {
      "type": 2,
      "title": "Gitlab Self hosted",
      "description": "Gitlab Self Hosted Instance",
      "note": "TBD",
      "categories": ["web", "git"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/gitlab/docker-compose.yml"
      },
      "env": [
        {
          "name": "GITLAB_VERSION",
          "label": "Gitlab version",
          "description": "Version tag of the image to use",
          "default": "latest"
        },
        {
          "name": "GITLAB_HOME",
          "label": "GitLab Home Path on the host",
          "description": "The path on the host where GitLab data and configuration are persisted",
          "default": "/mnt/data1/gitlab"
        },
        {
          "name": "EXTERNAL_NETWORK",
          "label": "External network name",
          "description": "The name external network the web service should be attached to",
          "default": "stairwai-public-network"
        },
        {
          "name": "HOSTNAME",
          "label": "Hostname",
          "description": "Should possibly correspond to the DNS entry for the service IP",
          "default": "dvcs.apice.unibo.it"
        },
        {
          "name": "PUBLIC_IP",
          "label": "Public IP",
          "description": "Public IP for the container (Must be in 192.168.11.[192-253])",
          "default": "192.168.11.193"
        }
      ]
    },
    {
      "type": 2,
      "title": "Apice",
      "description": "An XWiki instance tailored for Omicini's group",
      "note": "Deploys an XWiki service backed by a MySQL 5.7 DBMS, with some fancy defaults",
      "categories": ["web", "cms"],
      "platform": "linux",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e2/Logo-xwikiorange.svg/162px-Logo-xwikiorange.svg.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/apice/docker-compose.yml"
      },
      "env": [
        {
          "name": "DB_VOLUME",
          "label": "DB volume name",
          "description": "The name of the (pre-existent) volume aimed at persisting the DB",
          "default": "apice-db-volume"
        },
        {
          "name": "XWIKI_VOLUME",
          "label": "XWiki volume name",
          "description": "The name of the (pre-existent) volume aimed at persisting the XWiki configuration and state files",
          "default": "apice-xwiki-volume"
        },
        {
          "name": "EXTERNAL_NETWORK",
          "label": "External network name",
          "description": "The name external network the web service should be attached to",
          "default": "web-entry_private-network"
        },
        {
          "name": "BASE_PATH",
          "label": "Base path",
          "description": "Relative path w.r.t. the service domain",
          "default": "apice"
        }
      ]
    },
    {
      "type": 2,
      "title": "GitLab Runner",
      "description": "A CI runner for a GitLab instance",
      "note": "Deploys a runner manager with a persistent configuration",
      "categories": ["web", "git"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/gitlab-runner/docker-compose.yml"
      },
      "env": [
        {
          "name": "GITLAB_PATH",
          "label": "GitLab Path",
          "description": "Directory on the host's file system that will contain the runner's configuration",
          "default": "/mnt/data1/gitlab-runner"
        },
        {
          "name": "INSTANCE_HOSTNAME",
          "label": "Instance Hostname",
          "description": "Instance hostname to be remapped",
          "default": "dvcs.apice.unibo.it"
        },
        {
          "name": "INSTANCE_IP",
          "label": "Overridden Instance IP",
          "description": "Instance IP overriding the public one",
          "default": "192.168.11.193"
        }
      ]
    },
    {
      "type": 2,
      "title": "Ascend Mindspore Jupyter",
      "description": "Jupyter Notebook with Ascend Mindspore tools",
      "note": "Deploys a Jupyter Notebook with Ascend Minspore support and a persistent volume configuration",
      "categories": ["ai", "machine-learning", "npu", "mindspore"],
      "platform": "linux",
      "logo": "https://seeklogo.com/images/H/huawei-logo-6535FE0552-seeklogo.com.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/ascend-mindspore-jupyter/docker-compose.yml"
      },
      "env": [
        {
          "name": "MODEL",
          "label": "Machine's NPU model",
          "description": "NPUs model installed on the machine. Possible values are '3010' or '9000'. Default: '3010'.",
          "default": "3010"
        },
        {
          "name": "VOLUME",
          "label": "Persistent volume name",
          "description": "Name of the persistent volume to attach to the notebook on the path /persistent"
        },
        {
          "name": "PORT",
          "label": "Port",
          "description": "The port the Jupyter service will listen upon"
        },
        {
          "name": "PASSWORD_SECRET_NAME",
          "label": "Password secret name",
          "description": "The name of the secret containing the password of the user to be used for accessing the Jupyter service"
        }
      ]
    },
    {
      "type": 2,
      "title": "Jupyter",
      "description": "Jupyter Notebook (no GPU)",
      "note": "Refer to the <a href=\"https://jupyter-docker-stacks.readthedocs.io/en/latest/using/selecting.html\">Docker stacks documentation page</a>",
      "categories": ["ai", "machine-learning"],
      "platform": "linux",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Jupyter_logo.svg/207px-Jupyter_logo.svg.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/jupyter/docker-compose.yml"
      },
      "env": [
        {
          "name": "NOTEBOOK_TYPE",
          "label": "Notebook type",
          "description": "Identifier of the image jupyter/NOTEBOOK_TYPE-notebook image. Options: base, minimal, r, scipy, tensorflow, datascience, pyspark, all-spark. Default: scipy.",
          "default": "scipy"
        },
        {
          "name": "NOTEBOOK_VERSION",
          "label": "Notebook version",
          "description": "Actual version of the jupyter/NOTEBOOK_TYPE-notebook image. Default: latest.",
          "default": "latest"
        },
        {
          "name": "USER",
          "label": "Username",
          "description": "The name of the user within the container"
        },
        {
          "name": "VOLUME",
          "label": "Persistent volume name",
          "description": "Name of the persistent volume to attach to the notebook on the path /home/${Username}/persistent"
        },
        {
          "name": "PORT",
          "label": "Port",
          "description": "The port the Jupyter service will listen upon"
        },
        {
          "name": "PASSWORD_SECRET_NAME",
          "label": "Password secret name",
          "description": "The name of the secret containing the password of the user to be used for accessing the Jupyter service"
        },
        {
          "name": "FURTHER_APT_PACKAGES",
          "label": "Further Ubuntu packages",
          "description": "Space-separated list of Ubuntu packages to be installed in the container. Leave empty if not needed."
        },
        {
          "name": "FURTHER_PIP_PACKAGES",
          "label": "Further Python packages",
          "description": "Space separated list of Python packages to be installed in the container, via PIP. Leave empty if not needed."
        }
      ]
    },
    {
      "type": 2,
      "title": "Jupyter (GPU Nvidia)",
      "description": "Jupyter Notebook with Nvidia support",
      "note": "Refer to the <a href=\"https://hub.docker.com/r/cschranz/gpu-jupyter\"><code>cschranz/gpu-jupyter</code> image</a> on DockerHub",
      "categories": ["ai", "machine-learning", "gpu"],
      "platform": "linux",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Jupyter_logo.svg/207px-Jupyter_logo.svg.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/jupyter-gpu/docker-compose.yml"
      },
      "env": [
        {
          "name": "VERSION",
          "label": "Notebook version",
          "description": "Actual version of the cschranz/gpu-jupyter:${Notebook version} image. Default: latest.",
          "default": "latest"
        },
        {
          "name": "USER",
          "label": "Username",
          "description": "The name of the user within the container"
        },
        {
          "name": "VOLUME",
          "label": "Persistent volume name",
          "description": "Name of the persistent volume to attach to the notebook on the path /home/${Username}/persistent"
        },
        {
          "name": "PORT",
          "label": "Port",
          "description": "The port the Jupyter service will listen upon"
        },
        {
          "name": "PASSWORD_SECRET_NAME",
          "label": "Password secret name",
          "description": "The name of the secret containing the password of the user to be used for accessing the Jupyter service"
        },
        {
          "name": "FURTHER_APT_PACKAGES",
          "label": "Further Ubuntu packages",
          "description": "Space-separated list of Ubuntu packages to be installed in the container. Leave empty if not needed."
        },
        {
          "name": "FURTHER_PIP_PACKAGES",
          "label": "Further Python packages",
          "description": "Space separated list of Python packages to be installed in the container, via PIP. Leave empty if not needed."
        }
      ]
    },
    {
      "type": 2,
      "title": "Jupyter + SSH (GPU Nvidia)",
      "description": "Jupyter Notebook with Nvidia support and SSH access",
      "note": "Refer to the <a href=\"https://hub.docker.com/r/cschranz/gpu-jupyter\"><code>cschranz/gpu-jupyter</code> image</a> on DockerHub",
      "categories": ["ai", "machine-learning", "gpu"],
      "platform": "linux",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Jupyter_logo.svg/207px-Jupyter_logo.svg.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/jupyter-gpu-ssh/docker-compose.yml"
      },
      "env": [
        {
          "name": "VERSION",
          "label": "Notebook version",
          "description": "Actual version of the cschranz/gpu-jupyter:${Notebook version} image. Default: latest.",
          "default": "latest"
        },
        {
          "name": "USER",
          "label": "Username",
          "description": "The name of the user within the container"
        },
        {
          "name": "VOLUME",
          "label": "Persistent volume name",
          "description": "Name of the persistent volume to attach to the notebook on the path /home/${Username}/persistent"
        },
        {
          "name": "PORT",
          "label": "Port",
          "description": "The port the Jupyter service will listen upon"
        },
        {
          "name": "SSH_PORT",
          "label": "SSH Port",
          "description": "The port the SSH service will listen upon"
        },
        {
          "name": "PASSWORD_SECRET_NAME",
          "label": "Password secret name",
          "description": "The name of the secret containing the password of the user to be used for accessing the Jupyter service"
        },
        {
          "name": "FURTHER_APT_PACKAGES",
          "label": "Further Ubuntu packages",
          "description": "Space-separated list of Ubuntu packages to be installed in the container. Leave empty if not needed."
        },
        {
          "name": "FURTHER_PIP_PACKAGES",
          "label": "Further Python packages",
          "description": "Space separated list of Python packages to be installed in the container, via PIP. Leave empty if not needed."
        },
        {
          "name": "AUTHORIZED_KEYS_CONFIG_NAME",
          "label": "Authorized Keys config name",
          "description": "The name of the config containing the authorized public keys which can access the SSH service"
        }
      ]
    },
    {
      "type": 2,
      "title": "Nginx",
      "description": "Persistent NGINX reverse proxy",
      "note": "Refer to the <a href=\"https://hub.docker.com/_/nginx\">Docker image documentation page</a>",
      "categories": ["web"],
      "platform": "linux",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/320px-Nginx_logo.svg.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/nginx/docker-compose.yml"
      },
      "env": [
        {
          "name": "HTTP_PORT",
          "label": "HTTP port",
          "description": "Port upon which the service will list for HTTP requests",
          "default": "8080"
        },
        {
          "name": "HTTPS_PORT",
          "label": "HTTPS port",
          "description": "Port upon which the service will list for HTTPS requests",
          "default": "4443"
        },
        {
          "name": "CONF_VOLUME",
          "label": "Persistent volume name",
          "description": "Name of the persistent volume to attach hosting the NGINX configuration"
        },
        {
          "name": "PUBLIC_IP",
          "label": "Public IP:",
          "description": "Public IP for the container (Must be in 192.168.11.[192-253])",
          "default": "192.168.11.253"
        },
        {
          "name": "PUBLIC_NETWORK",
          "label": "Public network name",
          "description": "Public virtual network for the container",
          "default": "stairwai-public-network"
        },
        {
          "name": "PRIVILEGED",
          "label": "Privileged",
          "description": "Whether to run the container in privileged mode or not",
          "default": "false"
        }
      ]
    },
    {
      "type": 2,
      "title": "Portainer Agent",
      "description": "Manage all the resources in your Swarm cluster",
      "note": "The agent will be deployed globally inside your cluster and available on port 9001.",
      "categories": ["portainer"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/portainer-agent/docker-stack.yml"
      }
    },
    {
      "type": 2,
      "title": "OpenFaaS",
      "name": "func",
      "description": "Serverless functions made simple",
      "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
      "categories": ["serverless"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/openfaas.png",
      "repository": {
        "url": "https://github.com/openfaas/faas",
        "stackfile": "docker-compose.yml"
      }
    },
    {
      "type": 2,
      "title": "IronFunctions",
      "description": "Open-source serverless computing platform",
      "note": "Deploys the IronFunctions API and UI.",
      "categories": ["serverless"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/ironfunctions/docker-stack.yml"
      }
    },
    {
      "type": 2,
      "title": "CockroachDB",
      "description": "CockroachDB cluster",
      "note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cockroachdb.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/cockroachdb/docker-stack.yml"
      }
    },
    {
      "type": 2,
      "title": "WordPress",
      "description": "WordPress setup with a MySQL database",
      "note": "Deploys a WordPress instance connected to a MySQL database.",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/wordpress/docker-stack.yml"
      },
      "env": [
        {
          "name": "MYSQL_DATABASE_PASSWORD",
          "label": "Database root password",
          "description": "Password used by the MySQL root user."
        }
      ]
    },
    {
      "type": 3,
      "title": "WordPress",
      "description": "WordPress setup with a MySQL database",
      "note": "Deploys a WordPress instance connected to a MySQL database.",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/wordpress/docker-compose.yml"
      },
      "env": [
        {
          "name": "MYSQL_DATABASE_PASSWORD",
          "label": "Database root password",
          "description": "Password used by the MySQL root user."
        }
      ]
    },
    {
      "type": 3,
      "title": "OpenAMT",
      "description": "OpenAMT Cloud Toolkit",
      "note": "MPS password needs to be 8-32 characters including one uppercase, one lowercase letters, one base-10 digit and one special character.",
      "categories": ["Cloud"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/openamt/docker-compose.yml"
      },
      "env": [
        {
          "name": "POSTGRES_USER",
          "label": "Database user"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Database password"
        },
        {
          "name": "MPS_USER",
          "label": "MPS user"
        },
        {
          "name": "MPS_PASSWORD",
          "label": "MPS password"
        },
        {
          "name": "MPS_COMMON_NAME",
          "label": "MPS URL",
          "description": "Used to connect to the MPS API."
        },
        {
          "name": "MPS_SECRET",
          "label": "MPS Secret",
          "description": "Strong secret key used to log into MPS."
        },
        {
          "name": "VAULT_SECRET",
          "label": "Vault secret",
          "description": "Secret token used to log into Vault (don't include '.' character)."
        }
      ]
    },
    {
      "type": 2,
      "title": "Microsoft OMS Agent",
      "description": "Microsoft Operations Management Suite Linux agent.",
      "categories": ["OPS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/microsoft-oms/docker-stack.yml"
      },
      "env": [
        {
          "name": "AZURE_WORKSPACE_ID",
          "label": "Workspace ID",
          "description": "Azure Workspace ID"
        },
        {
          "name": "AZURE_PRIMARY_KEY",
          "label": "Primary key",
          "description": "Azure primary key"
        }
      ]
    },
    {
      "title": "Sematext Docker Agent",
      "type": 2,
      "categories": ["Log Management", "Monitoring"],
      "description": "Collect logs, metrics and docker events",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/sematext-agent-docker/docker-stack.yml"
      },
      "env": [
        {
          "name": "LOGSENE_TOKEN",
          "label": "Logs token"
        },
        {
          "name": "SPM_TOKEN",
          "label": "SPM monitoring token"
        }
      ]
    },
    {
      "title": "Datadog agent",
      "type": 2,
      "categories": ["Monitoring"],
      "description": "Collect events and metrics",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/datadog-agent/docker-stack.yml"
      },
      "env": [
        {
          "name": "API_KEY",
          "label": "Datadog API key"
        }
      ]
    },
    {
      "type": 4,
      "title": "Wordpress",
      "description": "Wordpress setup with a MySQL database",
      "note": "Deploys a Wordpress instance connected to a MySQL database.",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/stacks/wordpress/edge/docker-stack.yml"
    },
    {
      "type": 4,
      "title": "CockroachDB",
      "description": "CockroachDB cluster",
      "note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/stacks/cockroachdb/edge/docker-stack.yml"
    },
    {
      "type": 4,
      "title": "Softing EdgeConnector modbus",
      "description": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
      "note": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/stacks/softing-edgeconnector-modbus/docker-compose.yml"
    },
    {
      "type": 3,
      "title": "FDO",
      "description": "FDO",
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/fdo/docker-stack.yml"
      },
      "env": [
        {
          "name": "owner_api_user",
          "label": "API Username"
        },
        {
          "name": "owner_api_password",
          "label": "API Password"
        }
      ]
    },
    {
      "type": 3,
      "title": "Dokku",
      "description": "Dokku setup as a compose file",
      "categories": ["PaaS"],
      "platform": "linux",
      "logo": "",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/dokku/docker-compose.yml"
      },
      "env": [
        {
          "name": "VERSION",
          "label": "Dokku version",
          "description": "Version of Dokku to use ('latest' if empty)",
          "default": "latest"
        },
        {
          "name": "DOKKU_HOSTNAME",
          "label": "Dokku hostname",
          "description": "Global hostname to be registered by Dokku"
        },
        {
          "name": "VOLUME_PATH",
          "label": "Dokku volume path",
          "description": "Host path to be bound to /mnt/dokku (`/var/lib/dokku` if empty)",
          "default": "/var/lib/dokku"
        },
        {
          "name": "DOKKU_HOST_ROOT",
          "label": "Dokku host root",
          "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'",
          "default": "/var/lib/dokku/home/dokku"
        },
        {
          "name": "SSH_PORT",
          "label": "SSH port",
          "description": "Host port to expose SSH port of Dokku (22 if empty)",
          "default": "22"
        },
        {
          "name": "HTTP_PORT",
          "label": "HTTP port",
          "description": "Host port to expose HTTP port of Dokku (80 if empty)",
          "default": "80"
        },
        {
          "name": "HTTPS_PORT",
          "label": "HTTPS port",
          "description": "Host port to expose HTTPS port of Dokku (443 if empty)",
          "default": "443"
        }
      ]
    },
    {
      "type": 2,
      "title": "LiveSwitch",
      "description": "A basic LiveSwitch stack with gateway, caching, database and media server",
      "categories": ["media"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/liveswitch.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/liveswitch/docker-stack.yml"
      },
      "env": [
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Postgres password"
        }
      ]
    },
    {
      "type": 3,
      "title": "LiveSwitch",
      "description": "A basic LiveSwitch compose with gateway, caching, database and media server",
      "categories": ["media"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/liveswitch.png",
      "repository": {
        "url": "https://github.com/almaai-unibo/portainer-templates",
        "stackfile": "stacks/liveswitch/docker-compose.yml"
      },
      "env": [
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Postgres password"
        }
      ]
    },
    {
      "type": 3,
      "title": "TOSIBOX Lock for Container",
      "description": "Lock for Container brings secure connectivity inside your industrial IoT devices",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/tosibox.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/tosibox/docker-compose.yml"
      },
      "env": [
        {
          "name": "LICENSE_KEY",
          "label": "License key"
        }
      ]
    }
  ]
}
